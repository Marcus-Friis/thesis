# gSpan

> gSpan is a software package of mining frequent graphs in a graph database.  Given a collection of graphs and a minimum support threshold, gSpan is able to find all of the subgraphs whose frequency is above the threshold.

Software source can be found [here!](https://sites.cs.ucsb.edu/~xyan/software/gSpan.htm)

## How-To
```
gSpan -f file [-n file] [-s minsup] [-m min_length] [-o] [-d] [-v lower_bound] [-t thread ] [-a] [-x] [-i]
```

- `-f` file, input data file options
- `-n` file, input negative data file for significant pattern
- `-p` file, input patterns discovered before
- `-s` minsup, set the minimum support (absolute value)
- `-w` input graphs have weight
- `-a` leap search `[0, 1)`
- `-r` minimum relevance `[0, 1)`
- `-x` maximum number of subgraph isomorphisms
- `-v` value of lower bound
- `-o` output discovered patterns
- `-d` output with dfs code format
- `-i` output graph ids
- `-t` number of threads

Example: 
```
gSpan -f Compound_422 -s 0.1 -o -i
```
which asks gSpan to discover all frequent subgraphs whose frequency is 10%. Here, the input file is `Chemical_340`. It outputs the patterns in `Chemical_340.fp`, with graph id. 

Concrete example on our data:
```
./gSpan -f ../../data/fsm/graphs/graph.gspan -s 0.6 -o -i
```

## Input Format:
The input format can be inferred from the file of `Chemical_340`: 
`t # N`	means the Nth graph, 
`v M L`	means that the Mth vertex in this graph has label L,
`e P Q L` means that there is an edge connecting the Pth vertex with the Qth vertex. The edge has label L.

`M`, `N`, `P`, `Q`, and `L` are integers. 

## Output Format:
- `t # id * support` 
- vertex-edge list, same as the input format
- x graph_id list

`id` is an integer, the serial number of the pattern. 
`support` is the absolute frequency of the graph pattern.
`graph_id list` is a list of graphs that contain the pattern. 
